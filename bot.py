import telebot
import config
from pymongo import MongoClient


bot = telebot.TeleBot(config.TOKEN)

class DataBase:
    def __init__(self):
        cluster = MongoClient("mongodb+srv://userVlad:123@cluster0.zmye5.mongodb.net/?retryWrites=true&w=majority")

        self.db = cluster["TelegramBot"]
        self.users = self.db["Users"]
        self.questions = self.db["Questions"]

        self.questions_count = len(list(self.questions.find({})))
    
    def get_user(self, chat_id):
        user = self.users.find_one({"chat_id": chat_id})

        if user is not None:
            return user

        user = {
            "chat_id": chat_id,
			"is_passing": False,
			"is_passed": False,
			"question_index": None,
			"answers": []
        }

        self.users.insert_one(user)

        return user

    def set_user(self, chat_id, update):
        self.users.update_one({"chat_id": chat_id}, {"$set": update})

    def get_question(self, index): 
        return self.questions.find_one({"id": index})

db = DataBase()

@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id, 
    "üî•–í—ñ—Ç–∞—é —Ç–µ–±–µ, –º–∞–π–±—É—Ç–Ω—ñ–π –∞–±—ñ—Ç—É—Ä—ñ—î–Ω—Ç–µ, <b>{0.first_name}</b>!üî•\n"
    "–Ø - <b>{1.first_name}</b>, –±–æ—Ç, —è–∫–∏–π –¥–æ–º–æ–∂–µ —Ç–æ–±—ñ –ø—ñ–¥–≥–æ—Ç—É–≤–∞—Ç–∏—Å—å –¥–æ –ó–ù–û –∑ –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—ó –º–æ–≤–∏ —à–≤–∏–¥–∫–æ —Ç–∞ —Ü—ñ–∫–∞–≤–æ.üéì".format(message.from_user, bot.get_me()),
    parse_mode='html')
    bot.send_message(message.chat.id,
    "–î–ª—è —Ç–æ–≥–æ —â–æ–± —Ä–æ–∑–ø–æ—á–∞—Ç–∏ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø—Ä–æ–ø–∏—à—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É - /test")

@bot.message_handler(commands=['test'])
def test(message):
    user = db.get_user(message.chat.id)

    if user["is_passed"]:
        bot.send_message(message.from_user.id, "–í–∏ —É–∂–µ –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –¥–∞–Ω–µ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è.")
        return

    if user["is_passing"]:
        return

    db.set_user(message.chat.id, {"question_index": 0, "is_passing": True})

    user = db.get_user(message.chat.id)
    post = get_question_message(user)
    if post is not None:
        bot.send_message(message.from_user.id, post["text"], reply_markup=post["keyboard"])

@bot.callback_query_handler(func=lambda query: query.data.startswith("?ans"))
def answered(query):
    user = db.get_user(query.message.chat.id)

    if user["is_passed"] or not user["is_passing"]:
        return
    
    user["answers"].append(int(query.data.split("&")[1]))
    db.set_user(query.message.chat.id, {"answers": user["answers"]})

    post = get_answered_message(user)
    if post is not None:
        bot.edit_message_text(post["text"], query.message.chat.id, query.message.id,
        reply_markup=post["keyboard"])

@bot.callback_query_handler(func=lambda query: query.data == "?next")
def next(query):
    user = db.get_user(query.message.chat.id)

    if user["is_passed"] or not user["is_passing"]:
        return
    
    user["question_index"] += 1
    db.set_user(query.message.chat.id, {"question_index": user["question_index"]})

    post = get_question_message(user)
    if post is not None:
        bot.edit_message_text(post["text"], query.message.chat.id, query.message.id,
        reply_markup=post["keyboard"])

def get_question_message(user):
    if user["question_index"] == db.questions_count:
        count = 0
        for question_index, question in enumerate(db.questions.find({})):
            if question["correct"] == user["answers"][question_index]:
                count += 1

        if count < 15:
            smile = "üò•"
        elif count < 25:
            smile = "üòê"
        elif count < 35:
            smile = "üòÄ"
        else:
            smile = "üòé"

        text = f"–ö-—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–∏—Ö –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π - {count}, {smile}. \n–í—Å—å–æ–≥–æ –∑–∞–≤–¥–∞–Ω—å - {db.questions_count}."

        db.set_user(user["chat_id"], {"is_passed": True, "is_passing": False})

        return {
            "text": text,
            "keyboard": None
        }

    question = db.get_question(user["question_index"])

    if question is None:
        return
    
    keyboard = telebot.types.InlineKeyboardMarkup()
    for answer_index, answer in enumerate(question["answers"]):
        keyboard.row(telebot.types.InlineKeyboardButton(f"{chr(answer_index + 97)}) {answer}",
        callback_data=f"?ans&{answer_index}"))
    
    text = f"–ü–∏—Ç—Ç–∞–Ω—è ‚Ññ{user['question_index'] + 1}\n\n{question['text']}"
    return {
        "text": text,
        "keyboard": keyboard
    }

def get_answered_message(user):
    question = db.get_question(user["question_index"])

    text = f"–ü–∏—Ç–∞–Ω–Ω—è ‚Ññ{user['question_index'] + 1}\n\n{question['text']}\n"

    for answer_index, answer in enumerate(question["answers"]):
        text += f"{chr(answer_index + 97)}) {answer}"

        if answer_index == question["correct"]:
            text += " ‚úÖ"
        elif answer_index == user["answers"][-1]:
            text += " ‚ùå"

        text += "\n"

    keyboard = telebot.types.InlineKeyboardMarkup()
    keyboard.row(telebot.types.InlineKeyboardButton("–î–∞–ª—ñ", callback_data="?next"))

    return {
        "text": text,
        "keyboard": keyboard
    }

@bot.message_handler(commands=['help'])
def help(message):
    bot.send_message(message.chat.id,
    "<b>–Ø–∫—â–æ —Ç–æ–±—ñ –ø–æ—Ç—Ä—ñ–±–Ω–∞ –¥–æ–ø–æ–º–æ–≥–∞, –æ—Å—å —Ç–æ–±—ñ —Å–ø–∏—Å–æ–∫ –º–æ—ó—Ö –∫–æ–º–∞–Ω–¥: </b>\n"
    "/test - –ü–æ—á–∞—Ç–∏ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è\n"
    "/list - –°–ø–∏—Å–æ–∫ –∫–æ—Ä–∏—Å–Ω–æ–≥–æ –º–∞—Ç–µ—Ä—ñ–∞–ª—É –¥–ª—è –ø—ñ–¥–≥–æ—Ç–æ–≤–∫–∏ –¥–æ —ñ—Å–ø–∏—Ç—É\n"
    "/help - –î–æ–ø–æ–º–æ–≥–∞ –∑ –±–æ—Ç–æ–º\n"
    "/nuwm - –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç –ù–£–í–ì–ü\n"
    "/contact - –ü–æ–∫–∞–∑–∞—Ç–∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é".format(message.from_user, bot.get_me()),
    parse_mode='html')

@bot.message_handler(commands=['list'])
def list(message):
    bot.send_message(message.chat.id,
    "<b>–Ø –ø—ñ–¥—ñ–±—Ä–∞–≤ –¥–ª—è —Ç–µ–±–µ —Å–ø–∏—Å–æ–∫ –∫–æ—Ä–∏—Å–Ω–∏—Ö –¥–∂–µ—Ä–µ–ª, —è–∫—ñ –ø–æ–∫—Ä–∞—â–∞—Ç—å —Ç–≤–æ—é –ø—ñ–¥–≥–æ—Ç–æ–≤–∫—É –¥–æ –ó–ù–û:</b>\n\n"
    "1Ô∏è‚É£ –ù—ñ –¥–ª—è –∫–æ–≥–æ –Ω–µ —Å–µ–∫—Ä–µ—Ç, —â–æ –∞—É–¥—ñ—é–≤–∞–Ω–Ω—è —î –æ–¥–Ω–æ—é —ñ–∑ –Ω–∞–π—Å–∫–ª–∞–¥–Ω—ñ—à–∏—Ö —Ç–µ–º, —è–∫—ñ –ø–æ–¥–∞–Ω—ñ –Ω–∞ –ó–ù–û. –¢–æ–º—É —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–æ –¥–ª—è —Ç–µ–±–µ —è –ø—ñ–¥—ñ–±—Ä–∞–≤ –æ—Å—å —Ç–∞–∫–∏–π <a href='https://www.listeninenglish.com/'>—Å–∞–π—Ç</a>. –ì–∞–¥–∞—é, –≤—ñ–Ω –∑–º–æ–∂–µ –ø–æ–∫—Ä–∞—â–∏—Ç–∏ —Ç–≤—ñ–π —Ä—ñ–≤–µ–Ω—å —Ä–æ–∑—É–º—ñ–Ω–Ω—è –∞—É–¥—ñ—é–≤–∞–Ω–Ω—è.\n\n"
    "2Ô∏è‚É£ <a href='https://puzzle-english.com/level-test'>Puzzle English</a> ‚Äì –æ–Ω–ª–∞–π–Ω-–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —Å–∞–º–æ—Å—Ç—ñ–π–Ω–æ–≥–æ –≤–∏–≤—á–µ–Ω–Ω—è –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—ó –º–æ–≤–∏. –†–æ–∑–≤–∏–≤–∞—î –ø—Ä–∞–∫—Ç–∏–∫—É —Ä–æ–∑—É–º—ñ–Ω–Ω—è –Ω–∞ —Å–ª—É—Ö, —á–∏—Ç–∞–Ω–Ω—è, –ø–∏—Å—å–º–∞ —Ç–∞ –º–æ–≤–ª–µ–Ω–Ω—è.\n\n"
    "3Ô∏è‚É£ <a href='https://www.cambridgeenglish.org/test-your-english/'>CELA</a>, –ö–µ–º–±—Ä–∏–¥–∂—Å—å–∫—ñ —ñ—Å–ø–∏—Ç–∏ - –≥—Ä—É–ø–∞ —ñ—Å–ø–∏—Ç—ñ–≤ –∑ –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—ó –º–æ–≤–∏, —â–æ –ø—Ä–æ–≤–æ–¥—è—Ç—å—Å—è –æ–¥–Ω–æ–π–º–µ–Ω–Ω–∏–º –ø—ñ–¥—Ä–æ–∑–¥—ñ–ª–æ–º –µ–∫–∑–∞–º–µ–Ω–∞—Ü—ñ–π–Ω–æ—ó —Ä–∞–¥–∏ –ö–µ–º–±—Ä–∏–¥–∂—Å—å–∫–æ–≥–æ —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç—É.\n\n"
    "4Ô∏è‚É£ –©–µ –æ–¥–Ω–∏–º –∑ –Ω–µ–ª–µ–≥–∫–∏—Ö –∑–∞–≤–¥–∞–Ω—å —î –∑–∞–≤–¥–∞–Ω–Ω—è —Ç–∏–ø—É USE of ENGLISH. –¢–æ–º—É –æ—Å—å —Ç–æ–±—ñ <a href='https://youtu.be/V4g--Khx-ME'>–ø–æ—Ä–∞–¥–∞</a>, —è–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –π–æ–≥–æ –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏.\n\n"
    "5Ô∏è‚É£ 100 –∞–Ω–≥–ª—ñ–π—Å—å–∫–∏—Ö <a href='https://cambridge.ua/blog/100-phrasal-verbs-you-need-to-know/'>—Ñ—Ä–∞–∑–æ–≤–∏—Ö –¥—ñ—î—Å–ª—ñ–≤</a>, —è–∫—ñ –º–∞—î –∑–Ω–∞—Ç–∏ –∫–æ–∂–µ–Ω.\n\n"
    "6Ô∏è‚É£ –¢–û–ü-30 <a href='https://enguide.ua/magazine/30-idiom-na-angliyskom-i-kak-ih-pravilno-ispolzovat'>—ñ–¥—ñ–æ–º</a> –≤ –∞–Ω–≥–ª—ñ–π—Å—å–∫—ñ–π –º–æ–≤—ñ.\n\n"
    "7Ô∏è‚É£ –ù—É —ñ –Ω–∞–æ—Å—Ç–∞–Ω–æ–∫, –æ—Å—å —Ç–æ–±—ñ <a href='https://zno.osvita.ua/english/'>—Å—Ç–æ—Ä—ñ–Ω–∫–∞</a>, –∑–≤—ñ–¥–∫–∏ —è –¥–∞—é –∑–º–æ–≥—É —Ç–æ–±—ñ –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç–∏.".format(message.from_user, bot.get_me()),
    parse_mode='html')

@bot.message_handler(commands=['nuwm'])
def nuwm(message):
    bot.send_message(message.chat.id,
    "<b>–©–æ –∑–∞ —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç –ù–£–í–ì–ü ? ü§î</b>\n\n"
    "–û–∫–µ–π, —Å–ø—Ä–æ–±—É—é —Ä–æ–∑–ø–æ–≤—ñ—Å—Ç–∏. <b>–ù–£–í–ì–ü</b> - —Ü–µ –Ω–µ –ø—Ä–æ—Å—Ç–æ —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç. –ó–∞–ø–∏—Ç–∞—î—à —á–æ–º—É ? –î—É–º–∞—é —è –∑–º–æ–∂—É –≤—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏ –Ω–∞ —Ç–≤–æ—î –ø–∏—Ç–∞–Ω–Ω—è.\n\n"
    "–°—Ç–∞–≤—à–∏ –Ω–∞—à–∏–º —Å—Ç—É–¥–µ–Ω—Ç–æ–º, —Ç–∏ –æ—Ç—Ä–∏–º–∞—î—à –≤–ª–∞—Å–Ω—É –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—É –ø–æ—à—Ç—É, —è–∫–∞ –¥–∞—Å—Ç—å —Ç–æ–±—ñ –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—è —Å–µ—Ä–≤—ñ—Å–∞–º–∏ Google. –ö—Ä—ñ–º —Ü—å–æ–≥–æ - —É –ø–æ–¥–∞—Ä—É–Ω–æ–∫ –±–µ–∑–ª—ñ–º—ñ—Ç–Ω–∏–π Google Drive, —è–∫–∏–π –∑–∞–ª–∏—à–∏—Ç—å—Å—è –∑ —Ç–æ–±–æ—é —ñ –ø—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –Ω–∞–≤—á–∞–Ω–Ω—è. –¢–∞–∫–æ–∂ —Ç–∏ –º–∞—Ç–∏–º–µ—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∏–π –∫–∞–±—ñ–Ω–µ—Ç —É –Ω–∞–≤—á–∞–ª—å–Ω—ñ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ñ Moodle, –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∏–π –º–æ–±—ñ–ª—å–Ω–∏–π –¥–æ–¥–∞—Ç–æ–∫ '–ú—ñ–π –ù–£–í–ì–ü', —Å–µ—Ä–≤—ñ—Å –æ–Ω–ª–∞–π–Ω-–ø—ñ–¥—Ç—Ä–∏–º–∫–∏ HelpDesk —Ç–∞ –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∏–π –¥–µ–∫–∞–Ω–∞—Ç, –∞ —Ç–∞–∫–æ–∂ –¥–æ—Å—Ç—É–ø –¥–æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∏ –º—ñ–∂–Ω–∞—Ä–æ–¥–Ω–∏—Ö –∫—É—Ä—Å—ñ–≤ –¥–ª—è —Å–∞–º–æ—Ä–æ–∑–≤–∏—Ç–∫—É —Ç–∞ –≤–¥–æ—Å–∫–æ–Ω–∞–ª–µ–Ω–Ω—è Coursera.\n\n"
    "–î–æ —Å–∫–ª–∞–¥—É —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç—É –≤—Ö–æ–¥–∏—Ç—å 9 –Ω–∞–≤—á–∞–ª—å–Ω–æ-–Ω–∞—É–∫–æ–≤–∏—Ö —ñ–Ω—Å—Ç–∏—Ç—É—Ç—ñ–≤: –≤–æ–¥–Ω–æ–≥–æ –≥–æ—Å–ø–æ–¥–∞—Ä—Å—Ç–≤–∞ —Ç–∞ –ø—Ä–∏—Ä–æ–¥–æ–æ–±–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è; –º–µ—Ö–∞–Ω—ñ—á–Ω–∏–π; –∞–≥—Ä–æ–µ–∫–æ–ª–æ–≥—ñ—ó —Ç–∞ –∑–µ–º–ª–µ—É—Å—Ç—Ä–æ—é; –±—É–¥—ñ–≤–Ω–∏—Ü—Ç–≤–∞ —Ç–∞ –∞—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä–∏; –∞–≤—Ç–æ–º–∞—Ç–∏–∫–∏, –∫—ñ–±–µ—Ä–Ω–µ—Ç–∏–∫–∏ —Ç–∞ –æ–±—á–∏—Å–ª—é–≤–∞–ª—å–Ω–æ—ó —Ç–µ—Ö–Ω—ñ–∫–∏; –µ–∫–æ–Ω–æ–º—ñ–∫–∏ —Ç–∞ –º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç—É; –ø—Ä–∞–≤–∞; –æ—Ö–æ—Ä–æ–Ω–∏ –∑–¥–æ—Ä–æ–≤`—è, –∑–∞–æ—á–Ω–æ-–¥–∏—Å—Ç–∞–Ω—Ü—ñ–π–Ω–æ–≥–æ –Ω–∞–≤—á–∞–Ω–Ω—è, –∞ —Ç–∞–∫–æ–∂ –Ü–Ω—Å—Ç–∏—Ç—É—Ç –ø—ñ—Å–ª—è–¥–∏–ø–ª–æ–º–Ω–æ—ó –æ—Å–≤—ñ—Ç–∏, –ù–∞–¥—Å–ª—É—á–∞–Ω—Å—å–∫–∏–π —ñ–Ω—Å—Ç–∏—Ç—É—Ç, 5 –∫–æ–ª–µ–¥–∂—ñ–≤, 5 –ª–æ–∫–∞–ª—å–Ω–∏—Ö —Ü–µ–Ω—Ç—Ä—ñ–≤ –¥–∏—Å—Ç–∞–Ω—Ü—ñ–π–Ω–æ-–∑–∞–æ—á–Ω–æ–≥–æ –Ω–∞–≤—á–∞–Ω–Ω—è.\n\n"
    "–ù–∞–≤—á–∞–Ω–Ω—è —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤ –ø—Ä–æ–≤–æ–¥–∏—Ç—å—Å—è –≤ 15 –Ω–∞–≤—á–∞–ª—å–Ω–∏—Ö –∫–æ—Ä–ø—É—Å–∞—Ö, –¥–µ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω—É—î –ø–æ–Ω–∞–¥ 100 —Å–ø–µ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏—Ö –∞—É–¥–∏—Ç–æ—Ä—ñ–π, –∫–∞–±—ñ–Ω–µ—Ç—ñ–≤, –æ—Å–Ω–∞—â–µ–Ω–∏—Ö —Å—É—á–∞—Å–Ω–æ—é –∞—É–¥—ñ–æ–≤—ñ–∑—É–∞–ª—å–Ω–æ—é –∞–ø–∞—Ä–∞—Ç—É—Ä–æ—é, –∫–æ–º–ø‚Äô—é—Ç–µ—Ä–Ω–æ—é —Ç–µ—Ö–Ω—ñ–∫–æ—é —Ç–∞ —ñ–Ω—à–∏–º –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è–º. –í —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç—ñ —Å—Ç–≤–æ—Ä–µ–Ω–æ —É–Ω—ñ–∫–∞–ª—å–Ω—ñ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä—ñ—ó –≥—ñ–¥—Ä–∞–≤–ª—ñ–∫–∏, –≥—ñ–¥—Ä–æ—Ç–µ—Ö–Ω—ñ–∫–∏, –º–µ–ª—ñ–æ—Ä–∞—Ü—ñ—ó —ñ “ë—Ä—É–Ω—Ç–æ–∑–Ω–∞–≤—Å—Ç–≤–∞, —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤–æ–¥–æ–ø–æ–¥–∞—á—ñ, –≤–æ–¥–æ–ø—ñ–¥–≥–æ—Ç–æ–≤–∫–∏ —Ç–∞ –≤–æ–¥–æ–æ—á–∏—Å—Ç–∫–∏ —Ç–æ—â–æ.\n\n"
    "–Ø–∫—â–æ —è –∑–º—ñ–≥ —Ç–µ–±–µ –∑–∞—Ü—ñ–∫–∞–≤–∏—Ç–∏, —Ç–æ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é —Ç–∏—Å–Ω—É—Ç–∏ <a href='https://nuwm.edu.ua/'>—Å—é–¥–∏</a>.".format(message.from_user, bot.get_me()),
    parse_mode='html')

@bot.message_handler(commands=['contact'])
def contact(message):
    bot.send_message(message.chat.id,
    "–ü–∏—à—ñ—Ç—å @vlad_hunko –∞–±–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É–π—Ç–µ –∑–∞ –Ω–æ–º–µ—Ä–æ–º:\n"
    "+38 (097) 32-35-357\n")
    bot.send_message(message.chat.id,
    "–¢–∞–∫–æ–∂ –º–æ–∂–µ—Ç–µ –ø–∏—Å–∞—Ç–∏ –Ω–∞ –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É –∞–¥—Ä–µ—Å—É:\n"
    "vlad.hunko10a@gmail.com\n")

bot.polling(none_stop=True)